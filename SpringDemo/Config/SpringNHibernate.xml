<?xml version="1.0" encoding="utf-8" ?>
<objects xmlns="http://www.springframework.net"
         xmlns:db="http://www.springframework.net/database"
         xmlns:tx="http://www.springframework.net/tx"
         >



  <!-- 数据库的配置 -->
  <db:provider id="DbProvider"
                   provider="System.Data.SqlClient"
                   connectionString="server=${db.server};Database=${db.database};uid=${db.user};pwd=${db.password}"
               />

  <!-- NHibernate 配置，主要是配置了SessionFactory对象及其依赖属性 -->

  <!-- 可以通过 name 为其指定别名 name="SessionFactory" 这里让SessionFactory保持单例-->
  <object id="NHibernateSessionFactory"
          type="Spring.Data.NHibernate.LocalSessionFactoryObject,Spring.Data.NHibernate3.2" singleton="true">

    <!-- 关于数据库连接的配置，直接使用 DbProvider 中的设置，这样，不需要为 Hibernate 再提供连接串和驱动 -->
    <property name="DbProvider" ref="DbProvider"/>

    <!-- 包含有映射文件的程序集，需要分析的hbm程序集名称 -->
    <property name="MappingAssemblies">
      <list>
        <value>SpringDemo</value>
      </list>
    </property>

    <!-- 其他的参数 -->
    <property name="HibernateProperties">
      <dictionary>
        <!-- 方言 -->
        <entry key="dialect" value="NHibernate.Dialect.MsSql2008Dialect"/>
        <entry key="use_proxy_validator" value="false" />
        <entry key="show_sql" value="true"/>
        <!--自动建表(反向映射)-->
        <entry key="hbm2ddl.auto" value="update"/>
        <entry key="adonet.batch_size" value="10"/>
        <entry key="command_timeout" value="60"/>
      </dictionary>
    </property>
    <!-- 必须增加此项说明，与 Spring 的声明式事务集成 -->
    <property name="ExposeTransactionAwareSessionFactory" value="true" />
  </object>

  <!-- Nhibernat配置-->
  <object id="HibernateTemplate" type="Spring.Data.NHibernate.Generic.HibernateTemplate">
    <property name="SessionFactory" ref="NHibernateSessionFactory" />
    <property name="TemplateFlushMode" value="Auto" />
    <property name="CacheQueries" value="true" />
  </object>

  <object id="SpringDemo.DAO.TestDataModel" type="SpringDemo.DAO.BaseRepository&lt;SpringDemo.Model.TestDataModel>, SpringDemo">
    <property name="HibernateTemplate" ref="HibernateTemplate"/>
  </object>

  <!-- 事务管理器 -->
  <object id="transactionManager"
        type="Spring.Data.NHibernate.HibernateTransactionManager, Spring.Data.NHibernate21">
    <property name="DbProvider" ref="DbProvider"/>
    <property name="SessionFactory" ref="NHibernateSessionFactory"/>
  </object>

  <!-- 事务AOP拦截器 -->
  <object id="transactionInterceptor" type="Spring.Transaction.Interceptor.TransactionInterceptor, Spring.Data">
    <property name="TransactionManager" ref="transactionManager"/>
    <property name="TransactionAttributeSource">
      <object type="Spring.Transaction.Interceptor.AttributesTransactionAttributeSource, Spring.Data"/>
    </property>
  </object>

  <!-- 事务AOP切面控制 -->
  <object id="BaseTransactionManager"  type="Spring.Transaction.Interceptor.TransactionProxyFactoryObject, Spring.Data" abstract="true">
    <property name="PlatformTransactionManager" ref="transactionManager"/>
    <property name="TransactionAttributes">
      <name-values>
        <add key="Save*" value="PROPAGATION_REQUIRED"/>
        <add key="Set*" value="PROPAGATION_REQUIRED"/>
        <add key="Finish*" value="PROPAGATION_REQUIRED"/>
        <add key="Update*" value="PROPAGATION_REQUIRED"/>
        <add key="Delete*" value="PROPAGATION_REQUIRED"/>
        <add key="Add*" value="PROPAGATION_REQUIRED"/>
        <add key="Get*" value="PROPAGATION_SUPPORTS,readOnly"/>
        <add key="Find*" value="PROPAGATION_SUPPORTS,readOnly"/>
        <add key="Load*" value="PROPAGATION_SUPPORTS,readOnly"/>
        <add key="*" value="PROPAGATION_REQUIRED"/>
      </name-values>
    </property>
  </object>

  <!-- 服务层代理AOP生成 -->
  <object id="TestService" parent="BaseTransactionManager">
    <property name="Target">
      <object type="SpringDemo.Service.TestServiceImp">
        <property name="UseDao" ref="SpringDemo.DAO.TestDataModel"/>
      </object>
    </property>
  </object>
  
</objects>
